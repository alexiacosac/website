"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6138],{30548:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>l,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"project/2025/miruna.bulugea/index","title":"VibeBox","description":"A Raspberry Pi Pico-based music mood controller with LEDs, LCD, buttons and a speaker","source":"@site/versioned_docs/version-fils_en/project/2025/miruna.bulugea/index.md","sourceDirName":"project/2025/miruna.bulugea","slug":"/project/2025/miruna.bulugea/","permalink":"/docs/fils_en/project/2025/miruna.bulugea/","draft":false,"unlisted":false,"editUrl":"https://www.github.com/upb-pmrust/website/edit/main/website/versioned_docs/version-fils_en/project/2025/miruna.bulugea/index.md","tags":[],"version":"fils_en","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"RustScape","permalink":"/docs/fils_en/project/2025/mihnea.girbacica/"},"next":{"title":"Lie Detector","permalink":"/docs/fils_en/project/2025/miruna.macesanu/"}}');var r=i(74848),n=i(28453);const l={},a="VibeBox",d={},c=[{value:"Description",id:"description",level:2},{value:"Motivation",id:"motivation",level:2},{value:"Architecture",id:"architecture",level:2},{value:"Log",id:"log",level:2},{value:"Week 5 - 11 May",id:"week-5---11-may",level:3},{value:"Week 12 - 18 May",id:"week-12---18-may",level:3},{value:"Week 19 - 25 May",id:"week-19---25-may",level:3},{value:"Hardware",id:"hardware",level:2},{value:"Schematics",id:"schematics",level:3},{value:"Bill of Materials",id:"bill-of-materials",level:3},{value:"Software",id:"software",level:2},{value:"Links",id:"links",level:2}];function o(e){const t={a:"a",admonition:"admonition",br:"br",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",img:"img",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,n.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"vibebox",children:"VibeBox"})}),"\n",(0,r.jsx)(t.p,{children:"A Raspberry Pi Pico-based music mood controller with LEDs, LCD, buttons and a speaker"}),"\n",(0,r.jsx)(t.admonition,{type:"info",children:(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"Author"}),": Bulugea Miruna Elena ",(0,r.jsx)(t.br,{}),"\n",(0,r.jsx)(t.strong,{children:"GitHub Project Link"}),": ",(0,r.jsx)(t.a,{href:"https://github.com/UPB-PMRust-Students/project-mirunabulugea",children:"https://github.com/UPB-PMRust-Students/project-mirunabulugea"})]})}),"\n",(0,r.jsx)(t.h2,{id:"description",children:"Description"}),"\n",(0,r.jsx)(t.p,{children:"A Raspberry Pi Pico project that uses four buttons, each representing a mood(happy,sad,energetic and chill). When a button is pressed, a co>"}),"\n",(0,r.jsx)(t.h2,{id:"motivation",children:"Motivation"}),"\n",(0,r.jsx)(t.p,{children:"I chose this project because I wanted to build something that combines music, hardware interaction, and visual feedback.I\u2019ve always wanted >"}),"\n",(0,r.jsx)(t.h2,{id:"architecture",children:"Architecture"}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{alt:"DiagramKicad",src:i(9895).A+"",width:"1024",height:"643"})}),"\n",(0,r.jsx)(t.p,{children:"The main components of the project are:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"Raspberry Pi Pico W (controller)"}),"\n",(0,r.jsx)(t.li,{children:"Four push-buttons (for mood selection)"}),"\n",(0,r.jsx)(t.li,{children:"DFPPlayer Mini MP3 module (audio playback)"}),"\n",(0,r.jsx)(t.li,{children:"Speaker (audio output)"}),"\n",(0,r.jsx)(t.li,{children:"LCD 1602 I2C (displays the current mood)"}),"\n",(0,r.jsx)(t.li,{children:"Four LEDs (flash according to music beats)"}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.em,{children:"Connections:"})}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"Each button connected to a GPIO pin"}),"\n",(0,r.jsx)(t.li,{children:"DFPPlayer Mini connected via UART"}),"\n",(0,r.jsx)(t.li,{children:"LCD connected via I2C"}),"\n",(0,r.jsx)(t.li,{children:"LEDs connected to GPIOs"}),"\n",(0,r.jsx)(t.li,{children:"Speaker connected to DFPPlayer Mini output"}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"log",children:"Log"}),"\n",(0,r.jsx)(t.h3,{id:"week-5---11-may",children:"Week 5 - 11 May"}),"\n",(0,r.jsx)(t.p,{children:"I have made resources about the components I need and bought them all .I have created the schematic using KiCad."}),"\n",(0,r.jsx)(t.h3,{id:"week-12---18-may",children:"Week 12 - 18 May"}),"\n",(0,r.jsx)(t.p,{children:"I began by physically wiring all the key components of the system on a breadboard,so I can start to write the code and test it ."}),"\n",(0,r.jsx)(t.h3,{id:"week-19---25-may",children:"Week 19 - 25 May"}),"\n",(0,r.jsx)(t.h2,{id:"hardware",children:"Hardware"}),"\n",(0,r.jsx)(t.p,{children:"Raspberry Pi Pico W:\nA compact, Wi-Fi-enabled microcontroller board that serves as the core controller for the entire system. It handles button inputs, controls>"}),"\n",(0,r.jsx)(t.p,{children:"4 Push Buttons:\n4 LEDs:\nVisual feedback components that light up and blink in sync with the beat of the currently playing track."}),"\n",(0,r.jsx)(t.p,{children:"1602 LCD Display with I2C Module:\nA simple character display used to show the current selected mood. The I2C module simplifies wiring by reducing the number of GPIO pins nee>"}),"\n",(0,r.jsx)(t.p,{children:"DFPlayer Mini MP3 Module:\nA compact MP3 player module that can read audio files from a microSD card. It\u2019s controlled via UART from the Raspberry Pi Pico W and output>"}),"\n",(0,r.jsxs)(t.p,{children:["Speaker:\nOutputs the audio from the DFPlayer Mini, playing the selected music track in real time based on the mood button pressed\n",(0,r.jsx)(t.img,{alt:"Hardware image",src:i(14299).A+"",width:"972",height:"768"})]}),"\n",(0,r.jsx)(t.h3,{id:"schematics",children:"Schematics"}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{alt:"Schematic",src:i(90042).A+"",width:"1123",height:"794"})}),"\n",(0,r.jsx)(t.h3,{id:"bill-of-materials",children:"Bill of Materials"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Device"}),(0,r.jsx)(t.th,{children:"Usage"}),(0,r.jsx)(t.th,{children:"Price"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsxs)(t.td,{children:["[Raspberry Pi Pico 2W](",(0,r.jsx)(t.a,{href:"https://www.optimusdigital.ro/ro/placi-raspberry-pi/13327-raspberry-pi-pico-2-w.html?gad_source=1&gbraid=0AAAAADv-%3E",children:"https://www.optimusdigital.ro/ro/placi-raspberry-pi/13327-raspberry-pi-pico-2-w.html?gad_source=1&gbraid=0AAAAADv->"})]}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsxs)(t.td,{children:["[Electronic Components Kit (LEDs, Buttons, Wires, Resistors, Breadboard)](",(0,r.jsx)(t.a,{href:"https://www.emag.ro/set-componente-electronice-breadboard-830-p%3E",children:"https://www.emag.ro/set-componente-electronice-breadboard-830-p>"})]}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"https://www.optimusdigital.ro/ro/audio/1484-modul-mp3-player-in-miniatura-dfplayer-mini.html",children:"DFPlayer Mini MP3 Module"})}),(0,r.jsx)(t.td,{children:"Plays audio fi>"}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"https://ro.farnell.com/multicomp-pro/abs-224-rc/speaker-200hz-to-20khz-4ohm-83db/dp/1761631",children:"Speaker"})}),(0,r.jsx)(t.td,{children:"Outputs audio from the MP3 modul>"}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsxs)(t.td,{children:["[LCD with I2C Interface and Blue Backlight](",(0,r.jsx)(t.a,{href:"https://www.optimusdigital.ro/ro/optoelectronice-lcd-uri/2894-lcd-cu-interfata-i2c-si-backlig%3E",children:"https://www.optimusdigital.ro/ro/optoelectronice-lcd-uri/2894-lcd-cu-interfata-i2c-si-backlig>"})]}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{})]})]})]}),"\n",(0,r.jsx)(t.h2,{id:"software",children:"Software"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{style:{textAlign:"left"},children:"Crate / Library"}),(0,r.jsx)(t.th,{style:{textAlign:"left"},children:"Description"}),(0,r.jsx)(t.th,{style:{textAlign:"left"},children:"Usage"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"left"},children:(0,r.jsx)(t.a,{href:"https://github.com/rp-rs/rp-hal",children:"rp-hal"})}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"Hardware Abstraction Layer (HAL) for Raspberry Pi RP2040 microcontrollers"}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"Controls GPIO pin>"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"left"},children:(0,r.jsx)(t.a,{href:"https://github.com/rust-embedded/embedded-hal",children:"embedded-hal"})}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"Hardware abstraction traits for embedded systems"}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"Provides standard inte>"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"left"},children:(0,r.jsx)(t.a,{href:"https://github.com/embedded-graphics/embedded-graphics",children:"embedded-graphics"})}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"2D graphics library for embedded systems"}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"Draws text and s>"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,r.jsx)(t.a,{href:"https://github.com/embassy-rs/embassy",children:"embassy"})," (optional)"]}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"Modern async framework for embedded systems"}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"For async task management (op>"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"left"},children:(0,r.jsx)(t.a,{href:"https://github.com/rust-lang/log",children:"log"})}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"Logging facade for Rust applications"}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"Debugging and logging events like button presses or erro>"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"left"},children:(0,r.jsx)(t.a,{href:"https://github.com/rust-embedded/panic-halt",children:"panic-halt"})}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"Minimal panic handler for embedded systems"}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"Stops execution and halts the MC>"})]})]})]}),"\n",(0,r.jsx)(t.hr,{}),"\n",(0,r.jsx)(t.h2,{id:"links",children:"Links"}),"\n",(0,r.jsxs)(t.p,{children:["1.",(0,r.jsx)(t.a,{href:"https://www.youtube.com/watch?v=1--GBKYXRyY",children:"Music Player using Raspberry Pi Pico and DFPPlayer"}),"\n2. ",(0,r.jsx)(t.a,{href:"https://pmrust.pages.upb.ro/docs/fils_en/project",children:"pmrust/2025"}),"\n..."]})]})}function h(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}},9895:(e,t,i)=>{i.d(t,{A:()=>s});const s=i.p+"assets/images/DiagramComp-dfd004e23579445120113a359e8b652c.webp"},14299:(e,t,i)=>{i.d(t,{A:()=>s});const s=i.p+"assets/images/Hardware-1180d87f42fa914fafcd76797a2634a1.webp"},90042:(e,t,i)=>{i.d(t,{A:()=>s});const s=i.p+"assets/images/Scematic-e2d7ef20110b1f3fb40e21ff5dd05452.svg"},28453:(e,t,i)=>{i.d(t,{R:()=>l,x:()=>a});var s=i(96540);const r={},n=s.createContext(r);function l(e){const t=s.useContext(n);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),s.createElement(n.Provider,{value:t},e.children)}}}]);