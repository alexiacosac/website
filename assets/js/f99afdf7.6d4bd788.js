"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1641],{46010:(e,r,s)=>{s.r(r),s.d(r,{assets:()=>c,contentTitle:()=>d,default:()=>h,frontMatter:()=>o,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"project/2025/vlad_mihai.stanciu/index","title":"Crane Controller","description":"Mini crane system using Raspberry Pi Pico 2W.","source":"@site/versioned_docs/version-acs_cc/project/2025/vlad_mihai.stanciu/index.md","sourceDirName":"project/2025/vlad_mihai.stanciu","slug":"/project/2025/vlad_mihai.stanciu/","permalink":"/docs/acs_cc/project/2025/vlad_mihai.stanciu/","draft":false,"unlisted":false,"editUrl":"https://www.github.com/upb-pmrust/website/edit/main/website/versioned_docs/version-acs_cc/project/2025/vlad_mihai.stanciu/index.md","tags":[],"version":"acs_cc","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Room Thermometer","permalink":"/docs/acs_cc/project/2025/vlad.grigore2503/"},"next":{"title":"Soda Dispenser","permalink":"/docs/acs_cc/project/2025/vladimir.popescu03/"}}');var i=s(74848),n=s(28453);const o={},d="Crane Controller",c={},l=[{value:"Description",id:"description",level:2},{value:"Motivation",id:"motivation",level:2},{value:"Architecture",id:"architecture",level:2},{value:"Block Scheme",id:"block-scheme",level:3},{value:"Log",id:"log",level:2},{value:"Week 5 \u2013 11 May",id:"week-5--11-may",level:3},{value:"Week 12 \u2013 18 May",id:"week-12--18-may",level:3},{value:"Week 19 \u2013 25 May",id:"week-19--25-may",level:3},{value:"Components",id:"components",level:2},{value:"Hardware Overview",id:"hardware-overview",level:2},{value:"Photos",id:"photos",level:3},{value:"Schematics",id:"schematics",level:2},{value:"Bill of Materials",id:"bill-of-materials",level:2},{value:"Software",id:"software",level:2}];function a(e){const r={a:"a",admonition:"admonition",br:"br",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",img:"img",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,n.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r.header,{children:(0,i.jsx)(r.h1,{id:"crane-controller",children:"Crane Controller"})}),"\n",(0,i.jsx)(r.p,{children:"Mini crane system using Raspberry Pi Pico 2W."}),"\n",(0,i.jsx)(r.admonition,{type:"info",children:(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Author"}),": Stanciu Vlad-Mihai ",(0,i.jsx)(r.br,{}),"\n",(0,i.jsx)(r.strong,{children:"GitHub Project Link"}),": ",(0,i.jsx)(r.a,{href:"https://github.com/UPB-PMRust-Students/proiect-StanciuVlad1",children:"https://github.com/UPB-PMRust-Students/proiect-StanciuVlad1"})]})}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h2,{id:"description",children:"Description"}),"\n",(0,i.jsxs)(r.p,{children:["The project consists of a ",(0,i.jsx)(r.strong,{children:"mini crane"})," built using a ",(0,i.jsx)(r.strong,{children:"Raspberry Pi Pico 2W"}),", capable of:"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:["Rotating the crane arm ",(0,i.jsx)(r.strong,{children:"left and right"})," using a ",(0,i.jsx)(r.strong,{children:"servo motor (SG90)"})," controlled by a ",(0,i.jsx)(r.strong,{children:"joystick"}),"."]}),"\n",(0,i.jsxs)(r.li,{children:["Raising and lowering the load using a ",(0,i.jsx)(r.strong,{children:"stepper motor (28BYJ-48 + ULN2003 driver)"}),"."]}),"\n",(0,i.jsxs)(r.li,{children:["Managing multiple motors ",(0,i.jsx)(r.strong,{children:"asynchronously"})," using ",(0,i.jsx)(r.strong,{children:"Rust"})," and ",(0,i.jsx)(r.strong,{children:"Embassy"}),"."]}),"\n",(0,i.jsxs)(r.li,{children:["Controlling the ",(0,i.jsx)(r.strong,{children:"servo motor"})," via a ",(0,i.jsx)(r.strong,{children:"biaxial joystick"})," for precise horizontal and vertical movements."]}),"\n",(0,i.jsxs)(r.li,{children:["Being powered independently by ",(0,i.jsx)(r.strong,{children:"external 9V batteries"})," to avoid overloading the controller."]}),"\n"]}),"\n",(0,i.jsx)(r.p,{children:"This setup simulates the mechanical behavior of a real crane, combining both rotation and lifting functionalities."}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h2,{id:"motivation",children:"Motivation"}),"\n",(0,i.jsxs)(r.p,{children:["I wanted to build a mechanical system that combines precise motion control and hardware interaction through an embedded controller.",(0,i.jsx)(r.br,{}),"\n","The project allows practice with PWM signals, motor driving, and simple automation using Rust on the Raspberry Pi Pico."]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h2,{id:"architecture",children:"Architecture"}),"\n",(0,i.jsxs)(r.p,{children:["The ",(0,i.jsx)(r.strong,{children:"Raspberry Pi Pico 2W"})," acts as the brain of the system:"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Joystick"}),": Sends analog signals to control the ",(0,i.jsx)(r.strong,{children:"SG90 servo motor"}),", rotating the crane arm horizontally (left/right)."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"SG90 Servo Motor"}),": Moves the crane arm based on joystick input, using PWM on GPIO 14."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"28BYJ-48 Stepper Motor + ULN2003 Driver"}),": Raises or lowers the load using a wound cable or string."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Push Buttons (GPIO 16 & 17)"}),": Used to command the stepper motor to rotate clockwise or counter-clockwise."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Stabilized 12V Power Supply"}),": Provides external power to the motors, protecting the Pico from overload."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Header Pins and Breadboard"}),": Simplify prototyping and electrical connections."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Common Ground"}),": Ensures reliable signal references across all components."]}),"\n"]}),"\n",(0,i.jsx)(r.p,{children:"Data flow:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:["The joystick's ",(0,i.jsx)(r.strong,{children:"VRx"})," and ",(0,i.jsx)(r.strong,{children:"VRy"})," outputs are read via GPIO 27 and GPIO 26."]}),"\n",(0,i.jsx)(r.li,{children:"Movement of the joystick determines whether the servo should rotate left or right."}),"\n",(0,i.jsx)(r.li,{children:"PWM is used to set the servo's position accordingly."}),"\n",(0,i.jsx)(r.li,{children:"Pressing either of the two buttons controls the direction of the stepper motor rotation via the ULN2003 driver board."}),"\n"]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"block-scheme",children:"Block Scheme"}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.img,{alt:"diagram",src:s(27007).A+"",width:"1024",height:"683"})}),"\n",(0,i.jsx)(r.h2,{id:"log",children:"Log"}),"\n",(0,i.jsx)(r.h3,{id:"week-5--11-may",children:"Week 5 \u2013 11 May"}),"\n",(0,i.jsx)(r.p,{children:"Wired all components to the Raspberry Pi Pico and wrote individual mock-up test code for each component to verify functionality (joystick, servo motor, stepper motor with driver, and push buttons)."}),"\n",(0,i.jsx)(r.h3,{id:"week-12--18-may",children:"Week 12 \u2013 18 May"}),"\n",(0,i.jsx)(r.p,{children:"Integrated the joystick with the servo motor through custom control code, allowing directional rotation of the crane arm. Also started basic physical construction of the crane using cardboard to create a preliminary structure."}),"\n",(0,i.jsx)(r.h3,{id:"week-19--25-may",children:"Week 19 \u2013 25 May"}),"\n",(0,i.jsx)(r.p,{children:"TO DO"}),"\n",(0,i.jsx)(r.h2,{id:"components",children:"Components"}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Component"}),(0,i.jsx)(r.th,{children:"Purpose"}),(0,i.jsx)(r.th,{children:"Details"})]})}),(0,i.jsxs)(r.tbody,{children:[(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.strong,{children:"Raspberry Pi Pico 2W"})}),(0,i.jsx)(r.td,{children:"Main controller"}),(0,i.jsx)(r.td,{children:"Runs firmware and manages motor control logic"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.strong,{children:"Joystick XY Module"})}),(0,i.jsx)(r.td,{children:"Input device"}),(0,i.jsx)(r.td,{children:"Sends analog signals to control servo direction (GPIO 27 & GPIO 26)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.strong,{children:"Micro Servomotor SG90"})}),(0,i.jsx)(r.td,{children:"Arm rotation"}),(0,i.jsx)(r.td,{children:"Rotates the crane arm left/right via PWM (GPIO 14)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.strong,{children:"28BYJ-48 Stepper Motor + ULN2003 Driver"})}),(0,i.jsx)(r.td,{children:"Load lifting"}),(0,i.jsx)(r.td,{children:"Raises or lowers the crane's load with button input"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.strong,{children:"Push Buttons (\xd72)"})}),(0,i.jsx)(r.td,{children:"Stepper control"}),(0,i.jsx)(r.td,{children:"One button per rotation direction (GPIO 16 and 17)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.strong,{children:"12V Stabilized Power Adapter"})}),(0,i.jsx)(r.td,{children:"External motor power"}),(0,i.jsx)(r.td,{children:"Provides stable supply to servo and stepper motors"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.strong,{children:"Header Pins (2x40p)"})}),(0,i.jsx)(r.td,{children:"Wiring"}),(0,i.jsx)(r.td,{children:"Enables clean prototyping and secure connections"})]})]})]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h2,{id:"hardware-overview",children:"Hardware Overview"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:["The ",(0,i.jsx)(r.strong,{children:"joystick"})," is powered by an ",(0,i.jsx)(r.strong,{children:"external 5V source"})," and shares a ",(0,i.jsx)(r.strong,{children:"common ground"})," with the rest of the components."]}),"\n",(0,i.jsxs)(r.li,{children:["Its analog outputs, ",(0,i.jsx)(r.strong,{children:"VRx"})," and ",(0,i.jsx)(r.strong,{children:"VRy"}),", are connected to ",(0,i.jsx)(r.strong,{children:"GPIO 27"})," and ",(0,i.jsx)(r.strong,{children:"GPIO 26"})," on the ",(0,i.jsx)(r.strong,{children:"Raspberry Pi Pico"}),"."]}),"\n",(0,i.jsx)(r.li,{children:"The direction in which the joystick is moved is determined by reading these analog values."}),"\n",(0,i.jsxs)(r.li,{children:["Based on the joystick input, the ",(0,i.jsx)(r.strong,{children:"Pico"})," adjusts the position of the ",(0,i.jsx)(r.strong,{children:"SG90 servo motor"})," via ",(0,i.jsx)(r.strong,{children:"PWM output on GPIO 14"}),"."]}),"\n",(0,i.jsxs)(r.li,{children:["The ",(0,i.jsx)(r.strong,{children:"stepper motor"})," receives its control signals from the Pico through a ",(0,i.jsx)(r.strong,{children:"ULN2003 driver board"}),"."]}),"\n",(0,i.jsxs)(r.li,{children:["Its rotation direction is selected using ",(0,i.jsx)(r.strong,{children:"two push buttons"}),", connected to ",(0,i.jsx)(r.strong,{children:"GPIO 16"})," and ",(0,i.jsx)(r.strong,{children:"GPIO 17"}),", both tied to a ",(0,i.jsx)(r.strong,{children:"common ground"}),"."]}),"\n",(0,i.jsxs)(r.li,{children:["All motors (servo and stepper) are powered by an ",(0,i.jsx)(r.strong,{children:"external 5V supply"})," to ensure stability and avoid overloading the Pico."]}),"\n",(0,i.jsxs)(r.li,{children:["A ",(0,i.jsx)(r.strong,{children:"shared ground connection"})," is used across all components to maintain proper signal reference."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Breadboards"})," and ",(0,i.jsx)(r.strong,{children:"male header pins"})," facilitate organized prototyping and signal routing."]}),"\n"]}),"\n",(0,i.jsx)(r.h3,{id:"photos",children:"Photos"}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.img,{alt:"diagram",src:s(64293).A+"",width:"576",height:"768"}),(0,i.jsx)(r.br,{}),"\n",(0,i.jsx)(r.img,{alt:"diagram",src:s(27291).A+"",width:"576",height:"768"}),(0,i.jsx)(r.br,{}),"\n",(0,i.jsx)(r.img,{alt:"diagram",src:s(62323).A+"",width:"576",height:"768"}),(0,i.jsx)(r.br,{}),"\n",(0,i.jsx)(r.img,{alt:"diagram",src:s(83273).A+"",width:"576",height:"768"})]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h2,{id:"schematics",children:"Schematics"}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.img,{alt:"diagram",src:s(52860).A+"",width:"1086",height:"768"})}),"\n",(0,i.jsx)(r.h2,{id:"bill-of-materials",children:"Bill of Materials"}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Product Code"}),(0,i.jsx)(r.th,{children:"Device"}),(0,i.jsx)(r.th,{children:"Usage"}),(0,i.jsx)(r.th,{children:"Price"})]})}),(0,i.jsxs)(r.tbody,{children:[(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"5056561803975"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"https://www.optimusdigital.ro/ro/raspberry-pi-placi/13327-raspberry-pi-pico-2w.html",children:"Raspberry Pi Pico 2W"})}),(0,i.jsx)(r.td,{children:"Main controller"}),(0,i.jsx)(r.td,{children:"39,66 lei"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"-"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"https://www.ardumarket.ro/ro/product/modul-arduino-xy-joystick?gad_source=1&gad_campaignid=22143406947&gbraid=0AAAAA-sic2TXGO4ckq7TMNGct-V4kJetp&gclid=Cj0KCQjwiqbBBhCAARIsAJSfZkbmcdvbndtY8V4cN8bssjhwYeATPo96KHRt2tGn088sG_zf64IX6i4aAuGgEALw_wcB",children:"Joystick XY Module"})}),(0,i.jsx)(r.td,{children:"Joystick directional control"}),(0,i.jsx)(r.td,{children:"8,00 lei (aprox.)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"-"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"https://www.ardumarket.ro/ro/product/sg90-rc-mini-servo-motor?search=servo+motor+sg90",children:"Micro Servomotor SG90 180\xb0"})}),(0,i.jsx)(r.td,{children:"Arm rotation (controlled by joystick)"}),(0,i.jsx)(r.td,{children:"14,00 lei"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"-"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"https://ardushop.ro/ro/electronica/656-stepper-motor-pas-cu-pas-5v-dc-28byj-48-cu-reductie-driver-6427854008176.html?gad_source=1&gad_campaignid=22058879462&gbraid=0AAAAADlKU-6Mwhj2CaAa-5jV0Ic3VkQvP&gclid=Cj0KCQjwiqbBBhCAARIsAJSfZkYgGtaoFkhDAPYvw6sTrXxd51G-U9_Q8K28k4bR8H2DWxqsIo7h6RcaAn2dEALw_wcB",children:"Stepper Motor 28BYJ-48 + Driver ULN2003"})}),(0,i.jsx)(r.td,{children:"Load lift system"}),(0,i.jsx)(r.td,{children:"18,00 lei (aprox.)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"6426462002635"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"https://www.optimusdigital.ro/ro/electronica-de-putere-alimentatoare-priza/2885-alimentator-stabilizat-12v-1000ma.html?search_query=Alimentator+Stabilizat+12+V+1000+mA&results=12",children:"12V 1A Power Supply Adapter"})}),(0,i.jsx)(r.td,{children:"Motor power supply"}),(0,i.jsx)(r.td,{children:"18,99 lei"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"-"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"https://ardushop.ro/ro/butoane--switch-uri/713-buton-mic-push-button-trough-hole-6427854009050.html",children:"Push Button \xd72"})}),(0,i.jsx)(r.td,{children:"Stepper motor control"}),(0,i.jsx)(r.td,{children:"1,00 lei \xd7 2 = 2,00 lei"})]})]})]}),"\n",(0,i.jsx)(r.h2,{id:"software",children:"Software"}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Library"}),(0,i.jsx)(r.th,{children:"Description"}),(0,i.jsx)(r.th,{children:"Usage"})]})}),(0,i.jsxs)(r.tbody,{children:[(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"https://github.com/embassy-rs/embassy",children:"embassy-rp"})}),(0,i.jsx)(r.td,{children:"RP2040 HAL"}),(0,i.jsx)(r.td,{children:"Async GPIO, PWM (servo), timers"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"https://github.com/rust-embedded/embedded-hal",children:"embedded-hal-async"})}),(0,i.jsx)(r.td,{children:"HAL Traits (async)"}),(0,i.jsx)(r.td,{children:"Abstrac\u021bie pentru GPIO, PWM, input polling"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"https://github.com/rust-embedded/embedded-hal",children:"embedded-hal"})}),(0,i.jsx)(r.td,{children:"HAL Traits (sync)"}),(0,i.jsx)(r.td,{children:"Control basic devices like stepper, joystick, buttons"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"https://crates.io/crates/stepper",children:"stepper"})}),(0,i.jsx)(r.td,{children:"Stepper motor driver"}),(0,i.jsx)(r.td,{children:"Control of stepper motor movement"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.a,{href:"https://crates.io/crates/servo-pwm",children:"servo-pwm"})," ",(0,i.jsx)(r.em,{children:"(sau direct PWM din embassy)"})]}),(0,i.jsx)(r.td,{children:"Servo motor control"}),(0,i.jsx)(r.td,{children:"Generare semnal PWM pentru controlul pozi\u021biei servomotorului"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.a,{href:"https://github.com/knurling-rs/defmt",children:"defmt"})," + ",(0,i.jsx)(r.a,{href:"https://github.com/knurling-rs/defmt",children:"defmt-rtt"})]}),(0,i.jsx)(r.td,{children:"Logging Framework"}),(0,i.jsx)(r.td,{children:"Real-time embedded debugging over RTT"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"https://github.com/knurling-rs/panic-probe",children:"panic-probe"})}),(0,i.jsx)(r.td,{children:"Panic Handler"}),(0,i.jsxs)(r.td,{children:["Diagnostic panic messages compatibile cu ",(0,i.jsx)(r.code,{children:"defmt"})]})]})]})]})]})}function h(e={}){const{wrapper:r}={...(0,n.R)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},27007:(e,r,s)=>{s.d(r,{A:()=>t});const t=s.p+"assets/images/crane_blockDiagram-4864f00e5b21ed618b47be08c139e43a.webp"},64293:(e,r,s)=>{s.d(r,{A:()=>t});const t=s.p+"assets/images/joystick-a490e6b33f78e5c53d324fc70c3b2b02.webp"},27291:(e,r,s)=>{s.d(r,{A:()=>t});const t=s.p+"assets/images/picos-70d7ce069965c5c3e9f34009f01f5037.webp"},62323:(e,r,s)=>{s.d(r,{A:()=>t});const t=s.p+"assets/images/picos2-eb7dd95065d89f84a864ed701edb992a.webp"},52860:(e,r,s)=>{s.d(r,{A:()=>t});const t=s.p+"assets/images/schematic-c68c543445f377a2e29d8fee010648c7.svg"},83273:(e,r,s)=>{s.d(r,{A:()=>t});const t=s.p+"assets/images/servoStepper-1fccada30777327fb8dda897d895fd7d.webp"},28453:(e,r,s)=>{s.d(r,{R:()=>o,x:()=>d});var t=s(96540);const i={},n=t.createContext(i);function o(e){const r=t.useContext(n);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function d(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(n.Provider,{value:r},e.children)}}}]);