"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8260],{43338:(e,r,s)=>{s.r(r),s.d(r,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>d,metadata:()=>n,toc:()=>a});const n=JSON.parse('{"id":"project/2025/victor.sandu2701/index","title":"AeroGuard 180","description":"A smart gas-detection and evacuation system with a 180 \xb0 pivoting fan","source":"@site/versioned_docs/version-acs_cc/project/2025/victor.sandu2701/index.md","sourceDirName":"project/2025/victor.sandu2701","slug":"/project/2025/victor.sandu2701/","permalink":"/docs/acs_cc/project/2025/victor.sandu2701/","draft":false,"unlisted":false,"editUrl":"https://www.github.com/upb-pmrust/website/edit/main/website/versioned_docs/version-acs_cc/project/2025/victor.sandu2701/index.md","tags":[],"version":"acs_cc","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"RFID-Controlled Corporate Elevator System","permalink":"/docs/acs_cc/project/2025/vicentiu.duta/"},"next":{"title":"Pico-checkers","permalink":"/docs/acs_cc/project/2025/victor_andrei.preda/"}}');var i=s(74848),t=s(28453);const d={},o="AeroGuard 180",c={},a=[{value:"Description",id:"description",level:2},{value:"Motivation",id:"motivation",level:2},{value:"Architecture",id:"architecture",level:2},{value:"<strong>Log</strong>",id:"log",level:2},{value:"<strong>Week 5 - 11 May</strong>",id:"week-5---11-may",level:3},{value:"<strong>Week 12 - 18 May</strong>",id:"week-12---18-may",level:3},{value:"<strong>Week 19 - 25 May</strong>",id:"week-19---25-may",level:3},{value:"Hardware",id:"hardware",level:2},{value:"Hardware Overview",id:"hardware-overview",level:3},{value:"Schematics",id:"schematics",level:3},{value:"Bill of Materials",id:"bill-of-materials",level:2},{value:"Software",id:"software",level:2},{value:"Links",id:"links",level:2}];function l(e){const r={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",img:"img",li:"li",ol:"ol",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r.header,{children:(0,i.jsx)(r.h1,{id:"aeroguard-180",children:"AeroGuard 180"})}),"\n",(0,i.jsx)(r.p,{children:"A smart gas-detection and evacuation system with a 180 \xb0 pivoting fan"}),"\n",(0,i.jsx)(r.admonition,{type:"info",children:(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Author"}),": Victor Sandu\n",(0,i.jsx)(r.strong,{children:"GitHub Project Link"}),": ",(0,i.jsx)(r.a,{href:"https://github.com/UPB-PMRust-Students/proiect-Victor270104",children:"https://github.com/UPB-PMRust-Students/proiect-Victor270104"})]})}),"\n",(0,i.jsx)(r.h2,{id:"description",children:"Description"}),"\n",(0,i.jsx)(r.p,{children:"AeroGuard\u202f180 continuously monitors the concentration of smoke and automatically evacuates contaminated air through a blower fan that can be rotated up to 180\u202f\xb0. The system sends Wi\u2011Fi alerts and provides local visual (LED) and audible (buzzer) feedback."}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsx)(r.p,{children:"Dual MQ\u20112 gas sensors detect smoke, LPG, and CO in real\u2011time."}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsx)(r.p,{children:"An SG90 micro\u2011servo sweeps a 3\u202f\u2013\u202f6\u202fV DC blower fan up to 180\u202f\xb0, directing the airflow toward the gas source."}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsx)(r.p,{children:"Raspberry\u202fPi\u202fPico\u202f2\u202fW runs async Rust firmware, processes sensor data, and publishes MQTT/HTTP alerts."}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsx)(r.p,{children:"Status LEDs (green\u202f=\u202fsafe, red\u202f=\u202falert) and a passive buzzer offer immediate on\u2011site feedback."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(r.h2,{id:"motivation",children:"Motivation"}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"This project"}),"  lets me dive deeper into embedded development with Rust while addressing a real\u2011world safety issue: preventing smoke or fires in homes and small labs by automating ventilation and issuing rapid notifications."]}),"\n",(0,i.jsx)(r.h2,{id:"architecture",children:"Architecture"}),"\n",(0,i.jsx)(r.p,{children:"MQ\u20112 gas sensors \u2013 supply analog voltage proportional to smoke/gas concentration. The Pico\u2019s ADC samples these signals continuously for threshold analysis."}),"\n",(0,i.jsx)(r.p,{children:"SG90 micro\u2011servo \u2013 receives PWM commands from the Pico and rotates the blower fan up to 180\u202f\xb0, so contaminated air is pushed away from the danger zone."}),"\n",(0,i.jsx)(r.p,{children:"L298N dual\u202fH\u2011bridge \u2013 drives the 3\u202f\u2013\u202f6\u202fV DC blower fan under Pico control (start/stop and optional speed modulation)."}),"\n",(0,i.jsx)(r.p,{children:"Status LEDs & passive buzzer \u2013 connected to GPIO pins; green LED indicates safe air, red LED and buzzer indicate dangerous concentrations and trigger ventilation."}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"LED indicators"}),":"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Green LED"}),": Air concentration is safe."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Red LED"}),": Air concentration is dangerous."]}),"\n"]}),"\n",(0,i.jsx)(r.p,{children:"Power source \u2013 a single USB\u2011C cable from the laptop delivers 5\u202fV. The Pico distributes logic power, while the L298N shares the same 5\u202fV rail for the fan. No external batteries are required."}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h2,{id:"log",children:(0,i.jsx)(r.strong,{children:"Log"})}),"\n",(0,i.jsx)(r.h3,{id:"week-5---11-may",children:(0,i.jsx)(r.strong,{children:"Week 5 - 11 May"})}),"\n",(0,i.jsx)(r.p,{children:"Completed the hardware wiring on a breadboard, connecting the Raspberry Pi Pico 2W with the MQ-2 gas sensor, L298N motor driver, DC motor, passive buzzer, SG90 servo, and status LEDs. Each component was individually tested to ensure functionality and correct pin connections."}),"\n",(0,i.jsx)(r.h3,{id:"week-12---18-may",children:(0,i.jsx)(r.strong,{children:"Week 12 - 18 May"})}),"\n",(0,i.jsx)(r.p,{children:"Transferred all components from the breadboard to a prototyping PCB. Soldered the connections and tested circuit continuity to avoid shorts or loose connections. Power delivery was stabilized, and the system was verified to operate correctly on the permanent board."}),"\n",(0,i.jsx)(r.h3,{id:"week-19---25-may",children:(0,i.jsx)(r.strong,{children:"Week 19 - 25 May"})}),"\n",(0,i.jsx)(r.p,{children:"Developed the software using Rust and the Embassy framework. Implemented the gas detection logic, motor control via L298N, servo positioning, and buzzer signaling. Successfully integrated hardware and software components, achieving full system functionality."}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h2,{id:"hardware",children:"Hardware"}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.img,{alt:"System Diagram",src:s(72759).A+""})}),"\n",(0,i.jsxs)(r.ol,{children:["\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Raspberry Pi Pico 2 W"}),":"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Purpose"}),": Central control unit."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Function"}),": Runs Rust code to control sensors, fan, and LEDs."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"MQ\u20112 Gas Sensor Module"}),":"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Purpose"}),": Detect flammable gases, CO, and smoke."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Function"}),": Provide analog voltage proportional to gas concentration\u2014read by the Pico ADC to trigger ventilation and alarms."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Micro\u2011servo SG90\u202f180\u202f\xb0"}),":"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Purpose"}),":  Mechanically orient the blower fan."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Function"}),": Receives PWM from the Pico to sweep up to 180\u202f\xb0, directing the airflow toward the contamination source."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"DC Blower Fan\xa03\u202fV\u202f\u2013\u202f6\u202fV"}),":"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Purpose"}),": Evacuate contaminated air from the monitored space."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Function"}),": Powered through an H\u2011bridge; speed and on/off state controlled by the Pico."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"L298N Dual H\u2011Bridge Driver"}),":"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Purpose"}),": Safely switch and drive the DC blower motor (with one spare channel for future actuators)."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Function"}),": Translates Pico logic\u2011level signals into motor currents up to 2\u202fA."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"LEDs (Red, Green)"}),":"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Purpose"}),": Visual indicator."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Function"}),": Green\xa0= safe, Red\xa0= alert; driven by Pico GPIO lines via current\u2011limiting resistors."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Passive Buzzer 3 V - 3.3 V"}),":"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Purpose"}),": Audible warning when gas thresholds are exceeded."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Function"}),": Generates a tone when toggled by a Pico GPIO pin."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"hardware-overview",children:"Hardware Overview"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:["The ",(0,i.jsx)(r.strong,{children:"Pico 2 W"})," reads air concentration."]}),"\n",(0,i.jsxs)(r.li,{children:["Based on air conditions, it controls the ",(0,i.jsx)(r.strong,{children:"ventilator"})," and the ",(0,i.jsx)(r.strong,{children:"motors"}),"."]}),"\n",(0,i.jsx)(r.li,{children:"LEDs give real-time feedback on air concentration."}),"\n"]}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.img,{alt:"System Photo",src:s(5729).A+"",width:"1024",height:"768"})}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h3,{id:"schematics",children:"Schematics"}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.img,{alt:"System Scheematic",src:s(68911).A+"",width:"1086",height:"768"})}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h2,{id:"bill-of-materials",children:"Bill of Materials"}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Device"}),(0,i.jsx)(r.th,{children:"Usage"}),(0,i.jsx)(r.th,{children:"Price"})]})}),(0,i.jsxs)(r.tbody,{children:[(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"https://www.optimusdigital.ro/ro/placi-raspberry-pi/13327-raspberry-pi-pico-2-w.html?search_query=Raspberry+Pi+Pico+2W&results=26",children:"Raspberry Pi Pico 2W"})}),(0,i.jsx)(r.td,{children:"Main microcontroller"}),(0,i.jsx)(r.td,{children:"~40 RON"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"https://www.optimusdigital.ro/ro/senzori-de-gaze/107-modul-senzor-gas-mq-2.html?search_query=Senzor+gaz&results=34",children:"Senzor Module Gas MQ-2"})}),(0,i.jsx)(r.td,{children:"Air concentration sensing"}),(0,i.jsx)(r.td,{children:"~11 RON"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"https://www.optimusdigital.ro/ro/motoare-servomotoare/2261-micro-servo-motor-sg90-180.html?search_query=SG90&results=11",children:"Micro Servomotor SG90 180\xb0"})}),(0,i.jsx)(r.td,{children:"Pivot for fan"}),(0,i.jsx)(r.td,{children:"~12 RON"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"https://www.optimusdigital.ro/ro/drivere-de-motoare-cu-perii/145-driver-de-motoare-dual-l298n.html?search_query=L298N&results=4",children:"Driver module Dual L298N"})}),(0,i.jsx)(r.td,{children:"Driver for motor"}),(0,i.jsx)(r.td,{children:"~11 RON"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"https://ardushop.ro/ro/electronica/752-motor-dc-3v-6v-cu-reductor-1-48-6427854009609.html?gad_campaignid=22058879462",children:"Motor DC 3V-6V"})}),(0,i.jsx)(r.td,{children:"Motor"}),(0,i.jsx)(r.td,{children:"~11 RON"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"https://www.optimusdigital.ro/ro/audio-buzzere/12247-buzzer-pasiv-de-33v-sau-3v.html?search_query=Buzzer+Pasiv+de+3.3V+sau+3V&results=1",children:"3V Passive Buzzer"})}),(0,i.jsx)(r.td,{children:"Buzzer"}),(0,i.jsx)(r.td,{children:"~1 RON"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"https://www.optimusdigital.ro/ro/optoelectronice-led-uri/697-led-verde-de-3-mm-cu-lentile-difuze.html?search_query=0104210000006209&results=1",children:"LED Verde 3mm Difuz"})}),(0,i.jsx)(r.td,{children:"Status indicator (safe)"}),(0,i.jsx)(r.td,{children:"~0.50 RON"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"https://www.optimusdigital.ro/ro/optoelectronice-led-uri/697-led-verde-de-3-mm-cu-lentile-difuze.html?search_query=0104210000006209&results=1",children:"LED Ro\u0219u 3mm Difuz"})}),(0,i.jsx)(r.td,{children:"Status indicator (alert)"}),(0,i.jsx)(r.td,{children:"~0.50 RON"})]})]})]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h2,{id:"software",children:"Software"}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Library"}),(0,i.jsx)(r.th,{children:"Description"}),(0,i.jsx)(r.th,{children:"Usage"})]})}),(0,i.jsxs)(r.tbody,{children:[(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"https://github.com/embassy-rs/embassy/tree/main/embassy-rp",children:"embassy-rp"})}),(0,i.jsx)(r.td,{children:"Suport async pentru RP2040"}),(0,i.jsx)(r.td,{children:"GPIO, PWM, ADC, ini\u021bializare periferice"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"https://crates.io/crates/embedded-hal",children:"embedded-hal"})}),(0,i.jsx)(r.td,{children:"Abstrac\u021bie hardware standard"}),(0,i.jsx)(r.td,{children:"GPIO, PWM, ADC, SPI/I2C"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"https://github.com/embassy-rs/embassy/tree/main/embassy-time",children:"embassy-time"})}),(0,i.jsx)(r.td,{children:"Timeri asincron \u0219i delay-uri"}),(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.code,{children:"Timer::after"})," pentru \xeent\xe2rzieri"]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"https://docs.rs/fixed/latest/fixed/",children:"fixed"})}),(0,i.jsx)(r.td,{children:"Numere fixe cu virgul\u0103 mobil\u0103"}),(0,i.jsx)(r.td,{children:"Configurare divizor PWM (frecven\u021b\u0103)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"https://github.com/knurling-rs/defmt",children:"defmt"})}),(0,i.jsx)(r.td,{children:"Logging eficient embedded"}),(0,i.jsxs)(r.td,{children:["Mesaje ",(0,i.jsx)(r.code,{children:"info!"})," pentru debugging"]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"https://crates.io/crates/panic-probe",children:"panic-probe"})}),(0,i.jsx)(r.td,{children:"Gestionare panic\u0103 embedded"}),(0,i.jsx)(r.td,{children:"Debug prin probe-run RTT"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"https://crates.io/crates/cortex-m-rt",children:"cortex-m-rt"})}),(0,i.jsx)(r.td,{children:"Suport runtime pentru ARM Cortex-M"}),(0,i.jsx)(r.td,{children:"Start-up \u0219i vectori de \xeentrerupere"})]})]})]}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h2,{id:"links",children:"Links"}),"\n",(0,i.jsxs)(r.ol,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.a,{href:"https://docs.rust-embedded.org/book/",children:"Rust Embedded Book"})," \u2013 Ghid complet pentru dezvoltare embedded \xeen Rust."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.a,{href:"https://github.com/embassy-rs/embassy",children:"Embassy Rust Project"})," \u2013 Framework async pentru microcontrolere \xeen Rust."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.a,{href:"https://datasheets.raspberrypi.com/pico/raspberry-pi-pico-c-sdk.pdf",children:"Raspberry Pi Pico SDK Documentation"})," \u2013 Documenta\u021bie oficial\u0103 C SDK pentru RP2040."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.a,{href:"https://datasheets.raspberrypi.com/rp2040/rp2040-datasheet.pdf",children:"RP2040 Datasheet"})," \u2013 Specifica\u021bii hardware detaliate pentru RP2040."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.a,{href:"https://docs.rs/embedded-hal/latest/embedded_hal/",children:"embedded-hal crate"})," \u2013 Interfa\u021b\u0103 standard pentru periferice embedded (GPIO, ADC, PWM etc)."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.a,{href:"https://github.com/knurling-rs/defmt",children:"defmt (embedded logging)"})," \u2013 Sistem de logare eficient pentru debugging embedded."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.a,{href:"https://docs.rs/fixed/latest/fixed/",children:"fixed crate"})," \u2013 Tipuri de date cu virgul\u0103 fix\u0103 folosite pentru divizoare PWM."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.a,{href:"https://probe.rs/",children:"probe-rs"})," - Toolchain pentru debugging, flashing \u0219i RTT log \xeen Rust embedded."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.a,{href:"https://github.com/embassy-rs/embassy/tree/main/examples/rp",children:"embassy-examples"})," \u2013 Exemple oficiale Embassy pentru RP2040."]}),"\n"]})]})}function h(e={}){const{wrapper:r}={...(0,t.R)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},72759:(e,r,s)=>{s.d(r,{A:()=>n});const n=s.p+"assets/images/diagram-7c3a769f40a2ddb0dd604866ed4389da.svg"},5729:(e,r,s)=>{s.d(r,{A:()=>n});const n=s.p+"assets/images/poza_proiect-002fd5700493ed3a89874616a7185fbb.webp"},68911:(e,r,s)=>{s.d(r,{A:()=>n});const n=s.p+"assets/images/schematic-10df787264600c5df989b47251d88ce2.svg"},28453:(e,r,s)=>{s.d(r,{R:()=>d,x:()=>o});var n=s(96540);const i={},t=n.createContext(i);function d(e){const r=n.useContext(t);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function o(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:d(e.components),n.createElement(t.Provider,{value:r},e.children)}}}]);