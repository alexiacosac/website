"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9324],{54654:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>o,contentTitle:()=>c,default:()=>h,frontMatter:()=>a,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"project/2025/ana.logoviceanu/index","title":"Barrier Access System","description":"A simple barrier access system that lifts the barrier when a registered license plate is recognized.","source":"@site/versioned_docs/version-fils_en/project/2025/ana.logoviceanu/index.md","sourceDirName":"project/2025/ana.logoviceanu","slug":"/project/2025/ana.logoviceanu/","permalink":"/docs/fils_en/project/2025/ana.logoviceanu/","draft":false,"unlisted":false,"editUrl":"https://www.github.com/upb-pmrust/website/edit/main/website/versioned_docs/version-fils_en/project/2025/ana.logoviceanu/index.md","tags":[],"version":"fils_en","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"PlantaSoteria","permalink":"/docs/fils_en/project/2025/ana.adascalitei/"},"next":{"title":"Blink and recall","permalink":"/docs/fils_en/project/2025/ana_maria.batagoi/"}}');var i=t(74848),n=t(28453);const a={},c="Barrier Access System",o={},d=[{value:"Description",id:"description",level:2},{value:"Motivation",id:"motivation",level:2},{value:"Architecture",id:"architecture",level:2},{value:"Log",id:"log",level:2},{value:"Week 5 - 11 May",id:"week-5---11-may",level:3},{value:"Week 12 - 18 May",id:"week-12---18-may",level:3},{value:"Week 19 - 25 May",id:"week-19---25-may",level:3},{value:"Hardware",id:"hardware",level:2},{value:"Schematics",id:"schematics",level:3},{value:"Bill of Materials",id:"bill-of-materials",level:3},{value:"Software",id:"software",level:2},{value:"Links",id:"links",level:2}];function l(e){const r={a:"a",admonition:"admonition",br:"br",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",ol:"ol",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,n.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r.header,{children:(0,i.jsx)(r.h1,{id:"barrier-access-system",children:"Barrier Access System"})}),"\n",(0,i.jsx)(r.p,{children:"A simple barrier access system that lifts the barrier when a registered license plate is recognized."}),"\n",(0,i.jsx)(r.admonition,{type:"info",children:(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Author"}),": Logoviceanu Ana Lorena ",(0,i.jsx)(r.br,{}),"\n",(0,i.jsx)(r.strong,{children:"GitHub Project Link"}),": ",(0,i.jsx)(r.a,{href:"https://github.com/UPB-PMRust-Students/project-Ana0420",children:"https://github.com/UPB-PMRust-Students/project-Ana0420"})]})}),"\n",(0,i.jsx)(r.h2,{id:"description",children:"Description"}),"\n",(0,i.jsx)(r.p,{children:"An automated system for controlling access to an office building parking lot, using color-based license plate recognition. When a car approaches, its presence is detected using an ultrasonic sensor. If the license plate (represented by a specific color pattern) matches a registered entry stored on an SD card, the barrier lifts and a stoplight turns green. Otherwise, access is denied and the light remains red. The system only activates when a car is near."}),"\n",(0,i.jsx)(r.h2,{id:"motivation",children:"Motivation"}),"\n",(0,i.jsx)(r.p,{children:"This project was chosen to combine embedded system knowledge, sensor integration, and Rust programming in a practical and realistic scenario. Automating a gate entrance simulates a real-world problem with simple yet scalable components. Using color instead of OCR keeps it simple and hardware-focused."}),"\n",(0,i.jsx)(r.h2,{id:"architecture",children:"Architecture"}),"\n",(0,i.jsx)(r.p,{children:"Main Components:\nProximity Detection: Ultrasonic sensor detects when a car is near.\nLicense Plate Identification: TCS34725 color sensor checks color blocks on the license plate.\nAccess Control: List of accepted license plates stored on an SD card.\nControl Unit: Raspberry Pi Pico W running Rust, interpreting sensor input and sending commands.\nOutput Mechanisms: Servo motor to raise/lower the barrier; RGB LED to show red/green light.\nConnections:\nCar detected by HC-SR04 \u2192 triggers the system.\nColor sensor (TCS34725) reads the plate colors.\nPico W matches the color pattern against the list stored on the SD card.\nIf matched:\nServo motor (SG90) opens the barrier.\nRGB LED turns green.\nIf not:\nBarrier stays closed.\nLED turns red.\nIdle: LED remains off unless a car is nearby."}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.img,{alt:"block_schematic",src:t(21937).A+"",width:"873",height:"670"})}),"\n",(0,i.jsx)(r.h2,{id:"log",children:"Log"}),"\n",(0,i.jsx)(r.h3,{id:"week-5---11-may",children:"Week 5 - 11 May"}),"\n",(0,i.jsx)(r.p,{children:"During this week, I focused on the planning and preparation phase of the project. I created an initial, orientative KiCad schematic to visualize the overall hardware architecture and validate component compatibility. I also finalized the list of required components and purchased all the necessary modules and accessories. Additionally, I planned the functional flow of the project \u2014 outlining how each component will interact, how the license plate recognition logic will work using color patterns, and how the system will control the barrier and stoplight based on sensor input and SD card validation."}),"\n",(0,i.jsx)(r.h3,{id:"week-12---18-may",children:"Week 12 - 18 May"}),"\n",(0,i.jsx)(r.p,{children:"This week, I completed the main hardware setup for the project. I placed and connected all required components on a breadboard based on their datasheets, ensuring correct wiring and functionality for each module. I also finalized the full KiCad schematic to reflect the actual hardware configuration. With this, the hardware part of the project is essentially finished, except for the physical model, which will be added later."}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.img,{alt:"hardware1",src:t(87055).A+"",width:"940",height:"612"})}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.img,{alt:"hardware2",src:t(33710).A+"",width:"1008",height:"720"})}),"\n",(0,i.jsx)(r.h3,{id:"week-19---25-may",children:"Week 19 - 25 May"}),"\n",(0,i.jsx)(r.h2,{id:"hardware",children:"Hardware"}),"\n",(0,i.jsx)(r.p,{children:"Raspberry Pi Pico W \u2013 Central microcontroller that runs the entire system\nTCS34725 Color Sensor \u2013 Detects and reads the color-based license plates\nHC-SR04 Ultrasonic Sensor \u2013 Detects incoming vehicles to trigger the system\nSG90 Servo Motor \u2013 Controls the barrier arm to allow or block entry\nRGB LED \u2013 Acts as a traffic light (green for entry, red for stop)\nSD Card Module \u2013 Stores the list of registered license plates (color codes)\n220\u03a9 Resistors \u2013 Current limiting for the RGB LED\nBreadboard & Jumper Wires \u2013 For building and connecting the circuit\nVoltage Divider (2 resistors) \u2013 Protects Pico from 5V echo signal of the ultrasonic sensor\nOptional Logic Level Shifter \u2013 Safely connects 5V devices to 3.3V Pico (if needed)\nExternal 5V Power Supply (optional) \u2013 For powering servo and 5V devices"}),"\n",(0,i.jsx)(r.h3,{id:"schematics",children:"Schematics"}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.img,{alt:"kicad_schematic",src:t(17006).A+"",width:"1123",height:"794"})}),"\n",(0,i.jsx)(r.h3,{id:"bill-of-materials",children:"Bill of Materials"}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Device"}),(0,i.jsx)(r.th,{children:"Usage"}),(0,i.jsx)(r.th,{children:"Price"})]})}),(0,i.jsxs)(r.tbody,{children:[(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"https://www.raspberrypi.com/documentation/microcontrollers/pico-series.html",children:"Raspberry Pi Pico W"})}),(0,i.jsx)(r.td,{children:"The main microcontroller that controls the system"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"https://www.optimusdigital.ro/ro/placi-raspberry-pi/13327-raspberry-pi-pico-2-w.html?search_query=pico&results=33",children:"40 RON"})})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"https://www.alldatasheet.com/datasheet-pdf/view/894928/AMSCO/TCS34725.html",children:"TCS34725 Color Sensor"})}),(0,i.jsx)(r.td,{children:"Used to detect color-coded license plates"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"https://ardushop.ro/ro/senzori/1454-modul-senzor-de-culoare-tcs34725-6427854021342.html",children:"22,05 RON"})})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"https://cdn.sparkfun.com/datasheets/Sensors/Proximity/HCSR04.pdf",children:"HC-SR04 Ultrasonic Sensor"})}),(0,i.jsx)(r.td,{children:"Detects the presence of a vehicle"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"https://ardushop.ro/ro/electronica/2289-modul-senzor-ultrasonic-detector-distanta-hc-sr04-6427854030726.html",children:"5,56 RON"})})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"http://www.ee.ic.ac.uk/pcheung/teaching/DE1_EE/stores/sg90_datasheet.pdf",children:"SG90 Servo Motor"})}),(0,i.jsx)(r.td,{children:"Raises and lowers the barrier"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"https://ardushop.ro/ro/electronica/1874-servomotor-sg90-6427854028365.html",children:"11,12 RON"})})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"https://static.chipdip.ru/lib/395/DOC050395146.pdf",children:"SD Card Module"})}),(0,i.jsx)(r.td,{children:"Stores the list of registered license plates"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"https://ardushop.ro/ro/module/1553-groundstudio-microsd-module-6427854023056.html",children:"7,14 RON"})})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"Micro SD Card (\u22651 GB)"}),(0,i.jsx)(r.td,{children:"Storage medium for the license data"}),(0,i.jsx)(r.td,{children:"[0]"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"Breadboard"}),(0,i.jsx)(r.td,{children:"Prototyping the circuit, Jumper Wires, Voltage Divider, 220\u03a9 Resistors, RGB LED, USB cable"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"https://www.emag.ro/set-componente-electronice-breadboard-830-puncte-led-uri-compatibil-arduino-si-raspberry-pi-zz00044/pd/DRXG4XYBM/?utm_medium=ios&utm_source=mobile%20app&utm_campaign=share%20product",children:"60 RON"})})]})]})]}),"\n",(0,i.jsx)(r.h2,{id:"software",children:"Software"}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Library"}),(0,i.jsx)(r.th,{children:"Description"}),(0,i.jsx)(r.th,{children:"Usage"})]})}),(0,i.jsxs)(r.tbody,{children:[(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"https://github.com/embassy-rs/embassy",children:"embassy"})}),(0,i.jsx)(r.td,{children:"Asynchronous embedded framework for Rust"}),(0,i.jsx)(r.td,{children:"Main framework for async embedded control"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"https://crates.io/crates/embedded-hal",children:"embedded-hal"})}),(0,i.jsx)(r.td,{children:"Hardware abstraction layer for embedded systems"}),(0,i.jsx)(r.td,{children:"Interface standard for communicating with peripherals"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"https://crates.io/crates/tcs3472",children:"tcs3472"})}),(0,i.jsx)(r.td,{children:"Driver for the TCS3472 color sensor"}),(0,i.jsx)(r.td,{children:"Reads the color-based license plates"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"https://crates.io/crates/hc-sr04",children:"hc-sr04"})}),(0,i.jsx)(r.td,{children:"Driver for the HC-SR04 ultrasonic sensor"}),(0,i.jsx)(r.td,{children:"Detects vehicle presence to trigger system"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"https://crates.io/crates/servo",children:"servo"})}),(0,i.jsx)(r.td,{children:"Servo motor control"}),(0,i.jsx)(r.td,{children:"Moves the barrier up/down"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"https://crates.io/crates/embedded-sdmmc",children:"embedded-sdmmc"})}),(0,i.jsx)(r.td,{children:"FAT filesystem access on SD cards"}),(0,i.jsx)(r.td,{children:"Reads license plate data stored on SD card"})]})]})]}),"\n",(0,i.jsx)(r.h2,{id:"links",children:"Links"}),"\n",(0,i.jsxs)(r.ol,{children:["\n",(0,i.jsx)(r.li,{children:(0,i.jsx)(r.a,{href:"https://www.raspberrypi.com/documentation/microcontrollers/pico-series.html",children:"raspberrypi"})}),"\n",(0,i.jsx)(r.li,{children:(0,i.jsx)(r.a,{href:"https://docs.rs/embedded-hal/latest/embedded_hal/",children:"embedded-hal"})}),"\n",(0,i.jsx)(r.li,{children:(0,i.jsx)(r.a,{href:"https://pico.implrust.com/ultrasonic/index.html",children:"ultrasonic sensor tutorial"})}),"\n"]})]})}function h(e={}){const{wrapper:r}={...(0,n.R)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},17006:(e,r,t)=>{t.d(r,{A:()=>s});const s=t.p+"assets/images/Barrier-Access-System-1dfa3be503e7f43e6c0208d20d4e6a22.svg"},21937:(e,r,t)=>{t.d(r,{A:()=>s});const s=t.p+"assets/images/block_scheme-a1d204139a88ad2cd8c29fd6cf7cfc1b.webp"},87055:(e,r,t)=>{t.d(r,{A:()=>s});const s=t.p+"assets/images/hardware1-0d1dfc0c4877f6b6f06585e8b5b15436.webp"},33710:(e,r,t)=>{t.d(r,{A:()=>s});const s=t.p+"assets/images/hardware2-323f1a6c08c95269ee2d6c1f6167ed20.webp"},28453:(e,r,t)=>{t.d(r,{R:()=>a,x:()=>c});var s=t(96540);const i={},n=s.createContext(i);function a(e){const r=s.useContext(n);return s.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function c(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),s.createElement(n.Provider,{value:r},e.children)}}}]);